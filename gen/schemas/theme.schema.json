{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Theme",
  "type": "object",
  "properties": {
    "id": {
      "$ref": "#/$defs/ThemeId",
      "default": "@unknown/unknown"
    },
    "metadata": {
      "description": "Metadata about the theme",
      "$ref": "#/$defs/ResourceMetadata",
      "default": {
        "description": {},
        "appTargetVersion": null,
        "banner": null,
        "bundled": false,
        "displayName": {},
        "filename": "",
        "path": "",
        "portrait": null,
        "screenshots": [],
        "tags": []
      }
    },
    "settings": {
      "$ref": "#/$defs/ThemeSettingsDefinition",
      "default": []
    },
    "sharedStyles": {
      "description": "Shared css styles for all widgets, commonly used to set styles\n for the components library",
      "type": "string",
      "default": ""
    },
    "styles": {
      "description": "Css Styles of the theme",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "default": {}
    }
  },
  "$defs": {
    "CssVariableName": {
      "description": "Valid CSS variable name that starts with `--` and follows CSS naming conventions",
      "type": "string"
    },
    "ResourceId": {
      "description": "Visual id composed of the creator username and the resource name. e.g. `@username/resource-name`",
      "type": "string"
    },
    "ResourceMetadata": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Map of language code to description. Could be a string, mapped to `en`.",
          "$ref": "#/$defs/ResourceText",
          "default": {}
        },
        "appTargetVersion": {
          "description": "App target version that this resource is compatible with.\\\n Developers are responsible to update the resource so when resource does not\n match the current app version, the resource will be shown with a warning message",
          "type": [
            "array",
            "null"
          ],
          "default": null,
          "maxItems": 3,
          "minItems": 3,
          "prefixItems": [
            {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            },
            {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            },
            {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          ]
        },
        "banner": {
          "description": "Banner image with aspect ratio of 21/9, this is used when promoting the resource.",
          "type": [
            "string",
            "null"
          ],
          "format": "uri",
          "default": null
        },
        "displayName": {
          "description": "Map of language code to display name. Could be a string, mapped to `en`.",
          "$ref": "#/$defs/ResourceText",
          "default": {}
        },
        "portrait": {
          "description": "Portrait image with aspect ratio of 1/1",
          "type": [
            "string",
            "null"
          ],
          "format": "uri",
          "default": null
        },
        "screenshots": {
          "description": "Screenshots should use aspect ratio of 16/9",
          "type": "array",
          "default": [],
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "tags": {
          "description": "tags are keywords to be used for searching and indexing",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceText": {
      "description": "Map of language code as key an translated values. Could be a string, mapped to `en`.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      ]
    },
    "ThemeConfigDefinition": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "group": {
              "type": "object",
              "properties": {
                "header": {
                  "$ref": "#/$defs/ResourceText"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/$defs/ThemeConfigDefinition"
                  }
                }
              },
              "required": [
                "header",
                "items"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "group"
          ]
        },
        {
          "type": "object",
          "properties": {
            "item": {
              "$ref": "#/$defs/ThemeVariableDefinition"
            }
          },
          "additionalProperties": false,
          "required": [
            "item"
          ]
        }
      ]
    },
    "ThemeId": {
      "description": "Visual id composed of the creator username and the resource name. e.g. `@username/resource-name`",
      "$ref": "#/$defs/ResourceId"
    },
    "ThemeSettingsDefinition": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/ThemeConfigDefinition"
      }
    },
    "ThemeVariableDefinition": {
      "oneOf": [
        {
          "description": "This config definition will allow to users write any string.\\\n Css syntax: https://developer.mozilla.org/en-US/docs/Web/CSS/string \\\n ### example:\n ```css\n --var-name: \"user input\"\n ```",
          "type": "object",
          "properties": {
            "syntax": {
              "type": "string",
              "const": "<string>"
            }
          },
          "$ref": "#/$defs/ThemeVariable_for_string",
          "required": [
            "syntax"
          ]
        },
        {
          "description": "This config definition will allow to users select a color and\n will be stored as a hex value, opacity is always allowed via UI.\\\n Css syntax: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value \\\n ### example:\n ```css\n --var-name: #ff22ee\n --var-name: #ff22ee\n ```",
          "type": "object",
          "properties": {
            "syntax": {
              "type": "string",
              "const": "<color>"
            }
          },
          "$ref": "#/$defs/ThemeVariable_for_string",
          "required": [
            "syntax"
          ]
        },
        {
          "description": "This will allow to the user set any lenght in any unit. (px, %, vw, etc).\n If you need force a specific unit, use Number instead lenght and on theme code makes the conversion.\\\n Css syntax: https://developer.mozilla.org/en-US/docs/Web/CSS/length \\\n ### example:\n ```css\n --var-name: 10px\n --var-name: 10%\n --var-name: 10vw\n ```",
          "type": "object",
          "properties": {
            "syntax": {
              "type": "string",
              "const": "<length>"
            }
          },
          "$ref": "#/$defs/ThemeVariableWithUnit_for_double",
          "required": [
            "syntax"
          ]
        },
        {
          "description": "This will allow to users to set any number, without units.\n Css syntax: https://developer.mozilla.org/en-US/docs/Web/CSS/number \\\n ### example:\n ```css\n --var-name: 10\n ```",
          "type": "object",
          "properties": {
            "syntax": {
              "type": "string",
              "const": "<number>"
            }
          },
          "$ref": "#/$defs/ThemeVariable_for_double",
          "required": [
            "syntax"
          ]
        },
        {
          "description": "This will allow to users to set any url.\\\n Css syntax: https://developer.mozilla.org/en-US/docs/Web/CSS/url_value \\\n ### example:\n ```css\n --var-name: url(\"https://example.com/image.png\")\n ```\n ### Warning: using this will make your resource dependent of the url and network connection.",
          "type": "object",
          "properties": {
            "syntax": {
              "type": "string",
              "const": "<url>"
            }
          },
          "$ref": "#/$defs/ThemeVariable_for_Url",
          "required": [
            "syntax"
          ]
        }
      ]
    },
    "ThemeVariableWithUnit_for_double": {
      "type": "object",
      "properties": {
        "initialValue": {
          "description": "initial variable value, if not manually set by the user.",
          "type": "number",
          "format": "double"
        },
        "initialValueUnit": {
          "description": "Css unit, example: `px`",
          "type": "string"
        },
        "label": {
          "description": "Label to show to the user on Settings.",
          "$ref": "#/$defs/ResourceText"
        },
        "name": {
          "description": "Css variable name, example: `--my-css-variable`",
          "$ref": "#/$defs/CssVariableName"
        }
      },
      "required": [
        "label",
        "name",
        "initialValue",
        "initialValueUnit"
      ]
    },
    "ThemeVariable_for_Url": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Extra details to show to the user under the label on Settings.",
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceText"
            },
            {
              "type": "null"
            }
          ]
        },
        "initialValue": {
          "description": "Initial variable value, if not manually set by the user.",
          "type": "string",
          "format": "uri"
        },
        "label": {
          "description": "Label to show to the user on Settings.",
          "$ref": "#/$defs/ResourceText"
        },
        "name": {
          "description": "Css variable name, example: `--my-css-variable`",
          "$ref": "#/$defs/CssVariableName"
        },
        "options": {
          "description": "If present, this will be rendered as a selector of options instead of an input.\n `initial_value` should be present in this list.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "tip": {
          "description": "Will be rendered as a icon with a tooltip side the label.",
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceText"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "label",
        "name",
        "initialValue"
      ]
    },
    "ThemeVariable_for_double": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Extra details to show to the user under the label on Settings.",
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceText"
            },
            {
              "type": "null"
            }
          ]
        },
        "initialValue": {
          "description": "Initial variable value, if not manually set by the user.",
          "type": "number",
          "format": "double"
        },
        "label": {
          "description": "Label to show to the user on Settings.",
          "$ref": "#/$defs/ResourceText"
        },
        "name": {
          "description": "Css variable name, example: `--my-css-variable`",
          "$ref": "#/$defs/CssVariableName"
        },
        "options": {
          "description": "If present, this will be rendered as a selector of options instead of an input.\n `initial_value` should be present in this list.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "tip": {
          "description": "Will be rendered as a icon with a tooltip side the label.",
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceText"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "label",
        "name",
        "initialValue"
      ]
    },
    "ThemeVariable_for_string": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Extra details to show to the user under the label on Settings.",
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceText"
            },
            {
              "type": "null"
            }
          ]
        },
        "initialValue": {
          "description": "Initial variable value, if not manually set by the user.",
          "type": "string"
        },
        "label": {
          "description": "Label to show to the user on Settings.",
          "$ref": "#/$defs/ResourceText"
        },
        "name": {
          "description": "Css variable name, example: `--my-css-variable`",
          "$ref": "#/$defs/CssVariableName"
        },
        "options": {
          "description": "If present, this will be rendered as a selector of options instead of an input.\n `initial_value` should be present in this list.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "tip": {
          "description": "Will be rendered as a icon with a tooltip side the label.",
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceText"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "label",
        "name",
        "initialValue"
      ]
    }
  }
}
