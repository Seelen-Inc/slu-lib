{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Widget",
  "type": "object",
  "properties": {
    "css": {
      "description": "Optional widget css",
      "type": [
        "string",
        "null"
      ],
      "default": null
    },
    "html": {
      "description": "Optional widget html",
      "type": [
        "string",
        "null"
      ],
      "default": null
    },
    "icon": {
      "description": "Optional icon to be used on settings. This have to be a valid react icon name.\\\nYou can find all icons here: https://react-icons.github.io/react-icons/.",
      "type": [
        "string",
        "null"
      ],
      "default": null
    },
    "id": {
      "description": "Resource id ex: `@seelen/weg`",
      "$ref": "#/$defs/WidgetId",
      "default": "@unknown/unknown"
    },
    "instances": {
      "description": "How many instances are allowed of this widget.",
      "$ref": "#/$defs/WidgetInstanceType",
      "default": "Single"
    },
    "js": {
      "description": "Optional widget js code",
      "type": [
        "string",
        "null"
      ],
      "default": null
    },
    "metadata": {
      "description": "Widget metadata, as texts, tags, images, etc.",
      "$ref": "#/$defs/ResourceMetadata",
      "default": {
        "appTargetVersion": null,
        "banner": null,
        "bundled": false,
        "createdAt": null,
        "description": {},
        "displayName": {},
        "filename": "",
        "path": "",
        "portrait": null,
        "screenshots": [],
        "tags": []
      }
    },
    "settings": {
      "description": "Widget settings declaration, this is esentially a struct to be used by an\nbuilder to create the widget settings UI on the Settings window.",
      "$ref": "#/$defs/WidgetSettingsDeclarationList",
      "default": []
    }
  },
  "$defs": {
    "ResourceId": {
      "description": "Visual id composed of the creator username and the resource name. e.g. `@username/resource-name`",
      "type": "string"
    },
    "ResourceMetadata": {
      "type": "object",
      "properties": {
        "appTargetVersion": {
          "description": "App target version that this resource is compatible with.\\\nDevelopers are responsible to update the resource so when resource does not\nmatch the current app version, the resource will be shown with a warning message",
          "type": [
            "array",
            "null"
          ],
          "default": null,
          "maxItems": 3,
          "minItems": 3,
          "prefixItems": [
            {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            },
            {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            },
            {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          ]
        },
        "banner": {
          "description": "Banner image with aspect ratio of 21/9, this is used when promoting the resource.",
          "type": [
            "string",
            "null"
          ],
          "format": "uri",
          "default": null
        },
        "description": {
          "description": "Map of language code to description. Could be a string, mapped to `en`.",
          "$ref": "#/$defs/ResourceText",
          "default": {}
        },
        "displayName": {
          "description": "Map of language code to display name. Could be a string, mapped to `en`.",
          "$ref": "#/$defs/ResourceText",
          "default": {}
        },
        "portrait": {
          "description": "Portrait image with aspect ratio of 1/1",
          "type": [
            "string",
            "null"
          ],
          "format": "uri",
          "default": null
        },
        "screenshots": {
          "description": "Screenshots should use aspect ratio of 16/9",
          "type": "array",
          "default": [],
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "tags": {
          "description": "tags are keywords to be used for searching and indexing",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceText": {
      "description": "Map of language code as key an translated values. Could be a string, mapped to `en`.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      ]
    },
    "WidgetId": {
      "description": "Visual id composed of the creator username and the resource name. e.g. `@username/resource-name`",
      "$ref": "#/$defs/ResourceId"
    },
    "WidgetInstanceType": {
      "oneOf": [
        {
          "description": "Default behavior, only one instance of this widget is allowed.\nThis is useful for widgets intended to work as custom config window.",
          "type": "string",
          "const": "Single"
        },
        {
          "description": "The widget is allowed to have multiple instances.\\\nThis allow to the user manually create more instances of this same widget.",
          "type": "string",
          "const": "Multiple"
        },
        {
          "description": "Seelen UI will create an instance of this widget per each monitor connected.\\\nThis can be configured by the user using per monitor settings.\\",
          "type": "string",
          "const": "ReplicaByMonitor"
        }
      ]
    },
    "WidgetSettingsDeclarationList": {
      "description": "The Widget Settings Declaration is a list of groups\neach group is a list of items and can have subgroups with headers.\n\nThis declarations will be used to render and store the settings of the widget on a\nfriendy way for the users, also will match the styles of the settings window.\n\nWith this, custom windows or widgets to configure an specific widget are not needed.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/WsdGroup"
      }
    },
    "WsdGroup": {
      "type": "object",
      "properties": {
        "group": {
          "description": "List of items in this group",
          "type": "array",
          "items": {
            "$ref": "#/$defs/WsdGroupEntry"
          }
        }
      },
      "required": [
        "group"
      ]
    },
    "WsdGroupEntry": {
      "type": "object",
      "properties": {
        "children": {
          "description": "List of items in this subgroup",
          "type": "array",
          "default": [],
          "items": {
            "$ref": "#/$defs/WsdGroupEntry"
          }
        },
        "config": {
          "description": "Declaration of key and value to be used as configuration.\nIf children is not empty, this will beused as header of the subgroup.",
          "$ref": "#/$defs/WsdItem"
        }
      },
      "required": [
        "config"
      ]
    },
    "WsdItem": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "switch"
            }
          },
          "$ref": "#/$defs/WsdItemSwitch",
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "select"
            }
          },
          "$ref": "#/$defs/WsdItemSelect",
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "input-text"
            }
          },
          "$ref": "#/$defs/WsdItemInputText",
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "input-number"
            }
          },
          "$ref": "#/$defs/WsdItemInputNumber",
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "range"
            }
          },
          "$ref": "#/$defs/WsdItemRange",
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "color"
            }
          },
          "$ref": "#/$defs/WsdItemColor",
          "required": [
            "type"
          ]
        }
      ]
    },
    "WsdItemColor": {
      "type": "object",
      "properties": {
        "allowAlpha": {
          "type": "boolean"
        },
        "allowSetByMonitor": {
          "description": "This setting could be set by monitor on the settings by monitor section.",
          "type": "boolean",
          "default": false
        },
        "defaultValue": {
          "type": "string",
          "default": ""
        },
        "dependencies": {
          "description": "Keys of items to be set in order to enable this item.\n\nit uses js logic (!!value) to determine if the item is enabled",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "key": {
          "description": "Unique key for this item, used to identify it in the settings, should be unique.\\\nIf duplicated, duplicated items will be ignored.",
          "type": "string"
        },
        "label": {
          "description": "Label for this item could start with the prefix `t::` for translation",
          "$ref": "#/$defs/ResourceText"
        }
      },
      "required": [
        "key",
        "label",
        "allowAlpha"
      ]
    },
    "WsdItemInputNumber": {
      "type": "object",
      "properties": {
        "allowSetByMonitor": {
          "description": "This setting could be set by monitor on the settings by monitor section.",
          "type": "boolean",
          "default": false
        },
        "defaultValue": {
          "type": "number",
          "format": "double",
          "default": 0.0
        },
        "dependencies": {
          "description": "Keys of items to be set in order to enable this item.\n\nit uses js logic (!!value) to determine if the item is enabled",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "key": {
          "description": "Unique key for this item, used to identify it in the settings, should be unique.\\\nIf duplicated, duplicated items will be ignored.",
          "type": "string"
        },
        "label": {
          "description": "Label for this item could start with the prefix `t::` for translation",
          "$ref": "#/$defs/ResourceText"
        },
        "max": {
          "type": [
            "number",
            "null"
          ],
          "format": "double"
        },
        "min": {
          "type": [
            "number",
            "null"
          ],
          "format": "double"
        }
      },
      "required": [
        "key",
        "label"
      ]
    },
    "WsdItemInputText": {
      "type": "object",
      "properties": {
        "allowSetByMonitor": {
          "description": "This setting could be set by monitor on the settings by monitor section.",
          "type": "boolean",
          "default": false
        },
        "defaultValue": {
          "type": "string",
          "default": ""
        },
        "dependencies": {
          "description": "Keys of items to be set in order to enable this item.\n\nit uses js logic (!!value) to determine if the item is enabled",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "key": {
          "description": "Unique key for this item, used to identify it in the settings, should be unique.\\\nIf duplicated, duplicated items will be ignored.",
          "type": "string"
        },
        "label": {
          "description": "Label for this item could start with the prefix `t::` for translation",
          "$ref": "#/$defs/ResourceText"
        }
      },
      "required": [
        "key",
        "label"
      ]
    },
    "WsdItemRange": {
      "type": "object",
      "properties": {
        "allowSetByMonitor": {
          "description": "This setting could be set by monitor on the settings by monitor section.",
          "type": "boolean",
          "default": false
        },
        "defaultValue": {
          "type": "number",
          "format": "double",
          "default": 0.0
        },
        "dependencies": {
          "description": "Keys of items to be set in order to enable this item.\n\nit uses js logic (!!value) to determine if the item is enabled",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "from": {
          "type": "number",
          "format": "double"
        },
        "key": {
          "description": "Unique key for this item, used to identify it in the settings, should be unique.\\\nIf duplicated, duplicated items will be ignored.",
          "type": "string"
        },
        "label": {
          "description": "Label for this item could start with the prefix `t::` for translation",
          "$ref": "#/$defs/ResourceText"
        },
        "step": {
          "type": [
            "number",
            "null"
          ],
          "format": "double"
        },
        "to": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "key",
        "label",
        "from",
        "to"
      ]
    },
    "WsdItemSelect": {
      "type": "object",
      "properties": {
        "allowSetByMonitor": {
          "description": "This setting could be set by monitor on the settings by monitor section.",
          "type": "boolean",
          "default": false
        },
        "defaultValue": {
          "type": "string",
          "default": ""
        },
        "dependencies": {
          "description": "Keys of items to be set in order to enable this item.\n\nit uses js logic (!!value) to determine if the item is enabled",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "key": {
          "description": "Unique key for this item, used to identify it in the settings, should be unique.\\\nIf duplicated, duplicated items will be ignored.",
          "type": "string"
        },
        "label": {
          "description": "Label for this item could start with the prefix `t::` for translation",
          "$ref": "#/$defs/ResourceText"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/WsdItemSelectOption"
          }
        },
        "subtype": {
          "$ref": "#/$defs/WsdItemSelectSubtype"
        }
      },
      "required": [
        "key",
        "label",
        "subtype",
        "options"
      ]
    },
    "WsdItemSelectOption": {
      "type": "object",
      "properties": {
        "icon": {
          "description": "react icon name",
          "type": [
            "string",
            "null"
          ]
        },
        "label": {
          "description": "The label to be displayed",
          "$ref": "#/$defs/ResourceText"
        },
        "value": {
          "description": "The value to be set when this option is selected, should be unique",
          "type": "string"
        }
      },
      "required": [
        "label",
        "value"
      ]
    },
    "WsdItemSelectSubtype": {
      "type": "string",
      "enum": [
        "List",
        "Inline"
      ]
    },
    "WsdItemSwitch": {
      "type": "object",
      "properties": {
        "allowSetByMonitor": {
          "description": "This setting could be set by monitor on the settings by monitor section.",
          "type": "boolean",
          "default": false
        },
        "defaultValue": {
          "type": "boolean",
          "default": false
        },
        "dependencies": {
          "description": "Keys of items to be set in order to enable this item.\n\nit uses js logic (!!value) to determine if the item is enabled",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "key": {
          "description": "Unique key for this item, used to identify it in the settings, should be unique.\\\nIf duplicated, duplicated items will be ignored.",
          "type": "string"
        },
        "label": {
          "description": "Label for this item could start with the prefix `t::` for translation",
          "$ref": "#/$defs/ResourceText"
        }
      },
      "required": [
        "key",
        "label"
      ]
    }
  }
}
