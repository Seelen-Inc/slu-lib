name: Publish to NPM (next)

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  continuous-integration:
    uses: ./.github/workflows/ci.yml

  build-and-publish:
    needs: continuous-integration
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Change version for next
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');

            const denoJson = JSON.parse(fs.readFileSync('deno.json', 'utf8'));
            const currentVersion = denoJson.version;

            const timestamp = new Date().toISOString().replace(/[-:T]/g, '').slice(0, 14);
            const nightlyVersion = `${currentVersion}-next.${timestamp}`;

            denoJson.version = nightlyVersion;
            fs.writeFileSync('deno.json', JSON.stringify(denoJson, null, 2));

            let cargoTomlContent = fs.readFileSync('Cargo.toml', 'utf-8');
            cargoTomlContent = cargoTomlContent.replace(/^version\s*=\s*".*"/m, `version = "${nightlyVersion}"`);
            fs.writeFileSync('Cargo.toml', cargoTomlContent);

      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"

      - run: rustup --version
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Rust Bindings (ts-rs)
        run: deno task build:rs

      - name: Publish to JSR
        # Prepare the package for publishing performing all checks and validations without uploading
        # we just run this step to be safe when running the release workflow
        run: deno publish --allow-dirty --dry-run

      - name: Build NPM package
        run: deno task build:npm

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
        run: |
          cd ./npm
          npm publish --provenance --tag next

  send_event:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Sending Event
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.EYTHAN_WORKFLOWS_TOKEN }}
          repository: eythaann/seelen-ui
          event-type: update-slu-lib
